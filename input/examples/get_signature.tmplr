Title: get_signature()
example:1
----

<p>When you compose a new message the <a href="/lua/get_signature.html">get_signature()</a> function will be called to read your signature.</p>
<p>The following implementation attempts to dynamically and intelligently choose a suitable signature.  The selection is made based upon the first match made:</p>
<ul>
<li>Using the domain name of the recipient of the message.</li>
<li>Using the domain name of your <a href="/lua/from.html">from</a> address.</li>
<li>Using <span class="tt">~/.signature</span>.</li>
</ul>
<pre>
--
-- Return contents of the given file.
--
-- Note: Called by on_signature
--
function file_contents(file)
    local f = io.open(file, "rb")
    if ( f ) then
       local content = f:read("*all")
       f:close()
       return( content );
    else
       return( "Error reading file: \"" .. file .. "\"" )
    end
end


--
-- This function is called when you compose an email, the return value
-- is the signature text to insert at the end of the new mail.
--
-- In this example we try to lookup a signature based on the domains of
-- the sender and the recipient.  We stop at the first match.
--
-- If neither of those succeed we read ~/.signature if present.
--
-- For example:
--
--   Given a sender of "steve@steve.org.uk", and recipient of bob@example.com
--
--   1. We'd read and return the contents of  ~/.sigs/example.com if present.
--
--   2. If not we'd read and return the contents of  ~/.sigs/steve.org.uk if present.
--
--   3. If not we'd read and return the contents of ~/.signature
--
--   4. We give up and return "".
--
function get_signature( from, to, subject )

   --
   -- Get the home directory, if this fails we'll return
   -- an empty string.
   --
   home = os.getenv( "HOME" )
   if ( not home ) then
      return ""
   end

   --
   -- The two addresses we'll try to process.
   --
   addresses = {}
   addresses[1] = to
   addresses[2] = from

   for offset,addr in pairs(addresses) do

      -- strip anything except the address, by looking between: &lt;&gt;
      -- i.e. "Steve Kemp" &lt;steve@example.com&gt; becomes steve@example.com
      email = string.match(addr, "&lt;(.*)&gt;" ) or addr

      -- get the domain, lowercase it.
      domain = string.sub( email, string.find( email, "@" )+1 )
      domain = string.lower(domain)

      -- Look for the domain-file beneath ~/.sigs/
      file = home .. "/.sigs/" .. domain
      if ( <a href="/lua/file_exists.html">file_exists</a>( file ) ) then
         return( file_contents( file ) )
      end
   end

   --
   -- Fallback to ~/.signature if present
   --
   if ( <a href="/lua/file_exists.html">file_exists</a>( home .. "/.signature" ) ) then
      return( file_contents( home .. "/.signature" ) )
   else
      --
      -- No signature found.  Return empty text.
      --
      return ""
   end

end

</pre>