Title: Examples of Lua functions
----

<p><tt>lumail</tt> has an embedded Lua intepreter which is used to configure keybindings,
and perform general configuration.</p>
<p>If you're new to Lua you might find the <a href="http://www.lua.org/">Lua website</a> and the <a href="http://www.luafaq.org/">Lua Unofficial FAQ</a> useful resources.</p>


<h2>Writing useful functions</h2>
<blockquote>
<p>Using the <a href="/lua/">supplied primitives</a> you can write several useful functions easily.  For example this function will mark all messages as read:</p>
<pre>
--
-- Mark all messages in the currently selected folder(s) as read.
--
function mark_all_read()
   count = <a href="/lua/count_messages.html">count_messages</a>()
   i = 0

   while( i < count ) do
      <a href="/lua/jump_index_to.html">jump_index_to</a>( i )
      <a href="/lua/mark_read.html">mark_read</a>()
      i = i + 1
   end
end
</pre>
<p>If you define this function in your configuration file you may invoke it at any time by pressing "<tt>:</tt>" to bring up the eval-prompt, then entering "<tt>mark_all_read();</tt>".  (Alternatively you may bind a function to a keypress, via the notes below.)</p>
<p>This next example can be called against a message which is spam, and append the IP to a local blacklist file:</p>
<pre>
--
-- Append the IP address of the message to a blacklist.
--
-- <b>NOTE</b> - This only works because my mailserver is configured to write
-- the IP address of the sender to the header.
--
function spam()
   mode = <a href="global_mode.html">global_mode</a>()
   mode = string.lower( mode );
   val  = ""

   if ( string.find( mode, "message" ) ) then
      val = <a href="header.html">header</a>( "X-Remote-IP" )
   elseif (string.find(mode, "index" ) ) then
      val = <a href="header.html">header</a>( "X-Remote-IP" )
   else
      <a href="msg.html">msg</a>( "spam() not present for mode:" .. mode );
   end

   if ( val == "" ) then
      <a href="msg.html">msg</a>( "IP address not found in message." );
   else
      ff = io.open( "/etc/blacklist.d/smtp" , "a");
      ff:write( val .. "\n" )
      ff:close();
      <a href="msg.html">msg</a>( "blacklisted IP: " .. val );
   end
end
</pre>
</blockquote>

<h2>Binding keypresses to functions</h2>
<blockquote>
<p>All keybindings are configured by making entries in the global <a href="/lua/keymap.html">keymap</a>.  There are four entries in the keymap:</p>
<ul>
<li>Entries that apply in all modes.</li>
<li>Entries that apply in maildir-mode.</li>
<li>Entries that apply in index-mode.</li>
<li>Entries that apply in message-mode.</li>
</ul>
<p>With the previous <tt>mark_all_read</tt> function you would probably prefer to make it execute only in index-mode:</p>
<pre>
keymap['index']['R'] = 'mark_all_read();'
</pre>
<p>This will invoke the function if you press "<tt>R</tt>" in the index-view only; in all other modes the keypress "<tt>R</tt>" will do nothing.</p>
</blockquote>

<h2>Responding to events</h2>
<blockquote>
<p><tt>lumail</tt> has several defined callbackups which are listed in the <a href="/lua/">primitive list</a>, each one is named "on_XXXX".</p>
<p>For example when reading a message the function <tt>on_read_message()</tt> is called <b>if</b> you define it.</p>
<p>If you're missing a handler that you think would be useful please <a href="<!-- tmpl_var name='repo' -->">report a bug</a>.</p>
</blockquote>
